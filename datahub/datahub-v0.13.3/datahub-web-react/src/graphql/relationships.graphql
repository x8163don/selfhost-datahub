fragment fullRelationshipResults on EntityRelationshipsResult {
    start
    count
    total
    relationships {
        type
        direction
        entity {
            ...relationshipFields
        }
    }
}

fragment leafRelationshipResults on EntityRelationshipsResult {
    start
    count
    total
    relationships {
        type
        entity {
            urn
            type
        }
    }
}

fragment relationshipFields on EntityWithRelationships {
    ...lineageNodeProperties
    ... on Dataset {
        siblings {
            isPrimary
            siblings {
                urn
                type
                ...lineageNodeProperties
            }
        }
    }
    upstream: lineage(input: { direction: UPSTREAM, start: 0, count: 100 }) {
        ...leafLineageResults
    }
    downstream: lineage(input: { direction: DOWNSTREAM, start: 0, count: 100 }) {
        ...leafLineageResults
    }
}